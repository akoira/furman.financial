<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd


        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


	<context:annotation-config/>
	<context:component-scan base-package="by.dak.furman.financial.service,by.dak.furman.financial.dao"/>

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="spring/data-source.properties"/>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}"/>
		<property name="url" value="${database.url}"/>
		<property name="username" value="${database.username}"/>
		<property name="password" value="${database.password}"/>
		<property name="maxActive" value="${database.maxActive}"/>
		<property name="maxIdle" value="${database.maxIdle}"/>
		<property name="minIdle" value="${database.minIdle}"/>
		<property name="maxOpenPreparedStatements" value="${database.maxOpenPreparedStatements}"/>
		<property name="maxWait" value="${database.maxWait}"/>
	</bean>

	<tx:annotation-driven/>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="transactionSynchronization" value="1"/>
		<property name="rollbackOnCommitFailure" value="true"/>
		<property name="autodetectDataSource" value="false"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="packagesToScan" value="by.dak.furman.financial"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<!--<prop key="hibernate.cache.region.factory_class">-->
				<!--net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory-->
				<!--</prop>-->
				<!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider-->
				<!--</prop>-->
				<!--<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>-->
				<!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
				<!--<prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>-->
				<!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->

				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>

				<prop key="hibernate.dialect">${hibernate.dialect}</prop>

				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>


				<!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
				<!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
				<!--<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>-->
				<!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>-->
			</props>
		</property>
	</bean>


</beans>